package java.security;

import java.security.cert.Certificate;

/* 
With policy arguments:
keyPol  - policies on (secret / private) keys
certPol - policies on certificate data (i.e. public keys)
*/
public native class KeyStore<policy keyPol, policy certPol> {

  public static ?policyof(type) <policy keyPol, policy certPol> KeyStore<keyPol, certPol> getInstance(java.lang.String type)
    throws !policyof(type) ?policyof(type) KeyStoreException;
    
  public final void load(?policyof(this) java.io.InputStream<policyof(this)> stream, ?policyof(this) char[]<policyof(this)> password)
    throws ?policyof(this) !policyof(this) java.io.IOException,
           ?policyof(this) !policyof(this) NoSuchAlgorithmException,
           ?policyof(this) !policyof(this) java.security.cert.CertificateException;
           
  public final ?(certPol*policyof(alias)) Certificate getCertificate(String alias)
    throws !(certPol*policyof(alias)) ?(certPol*policyof(alias)) KeyStoreException;
    
  public final ?(keyPol*policyof(alias)*policyof(password))
    Key getKey(String alias, char[]<policyof(password)> password)
      throws !(keyPol*policyof(alias)*policyof(password)) KeyStoreException,
             !(keyPol*policyof(alias)*policyof(password)) NoSuchAlgorithmException,
             !(keyPol*policyof(alias)*policyof(password)) UnrecoverableKeyException;

}