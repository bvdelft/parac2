/*
 * Copyright (c) 1994, 2010, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package java.lang;

public final native class String
extends java.lang.Object
// implements java.io.Serializable, Comparable<String>, CharSequence
{
	  public String(?policyof(this) char[]<policyof(this)> chars){ }
	  
	  public String(?policyof(this) byte[]<policyof(this)> bytes, ?policyof(this) java.nio.charset.Charset charsset ){ }

    public ?policyof(this) byte[]<policyof(this)> getBytes();
    
    public ?policyof(this) String trim();
    
    public ?policyof(this) int length();
    
    public ?(policyof(this)*policyof(i)) Character charAt(int i);

    public ?(policyof(this)*policyof(from)*policyof(to)) String substring(int from, int to)
      throws !(policyof(this)+policyof(from)+policyof(to)) StringIndexOutOfBoundsException;
    
    public ?(policyof(this)*policyof(from)) String substring(int from)
      throws !(policyof(this)+policyof(from)) StringIndexOutOfBoundsException;
    
    public ?(policyof(this)*policyof(other)) int compareTo(String other);
    
    public ?(policyof(this)*policyof(other)) boolean equals(String other);
    
    public ?(policyof(this)*policyof(substring)) int indexOf(String substring);
    
    public ?(policyof(this)*policyof(substring)) int indexOf(char substring);
    
    public ?(policyof(this)*policyof(substring)*policyof(from)) int indexOf(char substring, int from);

    public ?(policyof(this)*policyof(regex)) String[]<policyof(this)*policyof(regex)> split(String regex);

    public ?(policyof(this)*policyof(prefix)) boolean startsWith(String prefix);

    public ?(policyof(this)*policyof(substring)) boolean contains(String substring);
    
    public ?(policyof(this)*policyof(charset)) byte[]<policyof(this)*policyof(charset)> getBytes(java.nio.charset.Charset charset);
    
    public ?policyof(this) char[]<policyof(this)> toCharArray();
    
    public static ?(policyof(_format)*policyof(args)) String format(String _format, Object... args);
}
